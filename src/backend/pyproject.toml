[project]
name = "math-solver-backend"
version = "0.1.0"
description = "Math problem solver backend API"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "python-multipart==0.0.6",
    "firebase-admin==6.2.0",
    "google-cloud-firestore==2.13.1",
    "pillow==10.1.0",
    "pytesseract==0.3.10",
    "openai>=1.50.0",
    "python-dotenv==1.0.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "httpx>=0.28.1",
    "aiofiles==23.2.1",
    "pypdf2==3.0.1",
    "pdf2image==1.16.3",
    "anyio>=4.8.0",
]

[project.optional-dependencies]
test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "deepeval==3.3.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "deepeval==3.3.5",
    "ruff==0.1.6",
    "black==23.11.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "matplotlib>=3.10.5",
    "seaborn>=0.13.2",
    "pandas>=2.3.1",
    "numpy>=2.3.2",
]



# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*" = ["B011"]  # Allow assert False in tests

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "firebase_admin.*",
    "google.cloud.*",
    "pytesseract.*",
    "PIL.*",
]
ignore_missing_imports = true
